files folder
------------------------

git init
git touch file1
git status
git add file1
git commit -m "label" file1
git log
git show cid



git touch file2 file3 file4
git status
git add file2 file3 file4    (or)  git add .   (or)   git add *    (or)    git add -A
git status
git commit -m "label" file2 file3 file4     (or)     git commit -m "label"


git reset head file1 (staging-->workspace)
git reset --soft cid(n-1)   (local repo---->staging)
git reset --mixed cid(n-1)   (loca repo---->workspace  +   staging----->workspace)it 


modify file1
-------------
git status           (workspace)
git diff file1      (to see modifications in file1 which is in workspace)
git add .
git commit -m "label"
git log
git show cid        (to see modifications in file after committed)


pushing files to github
--------------------------
cd ..
git clone https://github.com/SaiVaishuu/batch80.git     (Never clone a repository in another repository)
ls
cd batch80/
touch filename
git add .
git commit -m "label"
git push



alias
--------
git config --global alias.alias-name "original-name"
git config --global --unset alias.alias-name
git config --list

branches
-----------
git branch branch-name  (to create branch)
git branch            (list of branches)
git checkout b-name

git checkout -b branch-name (to create and checkout to the branch)

git merge b1-name    (be in target branch-to where u want to copy data)(b1-source branch-from where u want to copy data) 
git branch -d b-name  (to delete merged branch locally)
git branch -D b-name   (to delete non-merged branch locally)
git push origin b-name  (to push data in release branches/branches to central repo)
git push origin -d b-name  (to delete the branch in central repo)


To see the data in the file:
----------------------------
cat file-name

To skip merge conflict in branches :
----------------------------------
git merge --abort


