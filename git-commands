files folder
------------------------

git init
git touch file1
git status
git add file1
git commit -m "label" file1
git log
git show cid



git touch file2 file3 file4
git status
git add file2 file3 file4    (or)  git add .   (or)   git add *    (or)    git add -A
git status
git commit -m "label" file2 file3 file4     (or)     git commit -m "label"


git reset head file1 (staging-->workspace)
git reset --soft cid(n-1)   (local repo---->staging)
git reset --mixed cid(n-1)   (loca repo---->workspace  +   staging----->workspace)it 


modify file1
-------------
git status           (workspace)
git diff file1      (to see modifications in file1 which is in workspace)
git add .
git commit -m "label"
git log
git show cid        (to see modifications in file after committed)


pushing files to github
--------------------------
cd ..
git clone https://github.com/SaiVaishuu/batch80.git     (Never clone a repository in another repository)
ls
cd batch80/
touch filename
git add .
git commit -m "label"
git push



alias
--------
git config --global alias.alias-name  "original-name"
git config --global --unset alias.alias-name
git config --list




log commnads
------------
git log -n 
git log --oneline
git log --oneline -n 
git log --since=yyyy-mm-dd   (or)    git log --after=yyyy-mm-dd
git log --until=yyyy-mm-dd   (or)    git log --before=yyyy-mm-dd

git log  --since=yyyy-mm-dd --until=yyyy-mm-dd             (or)      git log --after=yyyy-mm-dd --before=yyyy-mm-dd

git log  --after="yyyy-mm-dd 24:00"  --before="yyyy-mm-dd 24:00"

git log --author=name
git log --author=name -n
git log --author=name  --oneline
git log --author=name  --oneline -n

git log --grep "label"

git log --  filename


branches
-----------
git branch branch-name  (to create branch)
git branch            (list of branches)
git checkout b-name

git checkout -b branch-name (to create and checkout to the branch)

git merge b1-name    (be in target branch-to where u want to copy data)(b1-source branch-from where u want to copy data) 
git branch -d b-name  (to delete merged branch locally)
git branch -D b-name   (to delete non-merged branch locally)
git push origin b-name  (to push data in release branches/branches to central repo)
git push origin -d b-name  (to delete the branch in central repo)

git pull origin b-name 


To see the data in the file:
----------------------------
cat file-name

To skip merge/rebase conflict in branches :
----------------------------------
git merge --abort
git rebase --abort

stash memory
------------
git stash list
git stash save "stash-labelname"
git stash show stash@{x}
git stash show -p stash@{x}

git stash pop stash@{x}
git stash apply stash@{x}
git stash drop stash@{x}


tag
-----
git tag
git tag tagname
git tag tagname cid
git show tagname

git tag -d tagname     (to delete tag locally)

git push origin tagname
git push --tags           (to push all tags at a time to central repo)

git push origin -d tagname    (to delete tag centrally)

git checkout tagname
git checkout main



amend
------------
git commit --amend -m "any label"

revert
----------
git revert cid

diff
--------
git diff filename
git diff f1 f2

git diff branch1 branch2

git diff tag1 tag2

Revert:
----------------
git revert cid


cherry-pick:
----------------
git cherry-pick cid         (to copy particular cid data from one branch to another branch)

fetch
----------------------
git pull= git fetch + git merge

in main branch:
--------------
git fetch
git branch -r
git show origin/main

git merge origin/main


in release branch:
-----------------
git fetch
git show origin/b-name

git merge origin/b-name








